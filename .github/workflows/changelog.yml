name: changelog

on:
  push:
    branches:
      - main

jobs:
  get_changelogs:
    name: Get Added Changelog Files
    runs-on: ubuntu-latest
    outputs:
      added_changelogs: ${{ steps.diff_changelogs.outputs.added_changelogs }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - id: files
        name: Get changed files
        uses: jitterbit/get-changed-files@v1
      - id: diff_changelogs
        name: Filter added changelog files
        if: ${{ steps.files.outputs.added }}
        run: |
          ADDED=$(echo "${{ steps.files.outputs.added }}")
          FORMATTED=$(echo "$ADDED" | tr ' ' '\n')
          REGX='^(changelog)/(\w+\.json)$'
          FILTERED=$(echo "$FORMATTED" | grep -E "$REGX")
          echo "Detected added changelogs: $FILTERED"
          echo "added=$FILTERED" >> $GITHUB_OUTPUT

  notify:
    needs: get_changelogs
    if: ${{ needs.get_changelogs.outputs.added }}
    name: Send ChangeLog Notifications
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          sudo apt-get install -y jq
          pip install pathlib
          pip install jinja-cli
      - name: Send ChangeLog Notifications
        env:
          SECURITY: ${{ secrets.TEAMS_WH_SECURITY }}
          SUPPORT: ${{ secrets.TEAMS_WH_SUPPORT }}
        run: |
          TEMPLATE_PATH="changelog/.template/default.j2"
          HEADERS='Content-Type: application/json'
          FILTERED="${{ needs.get_changelogs.outputs.added }}"
          echo "Detected changelog updates: $FILTERED"

          for FILE in $FILTERED; do
            echo "Processing changelog: $FILE"
            CHANNELS=$(jq -r '.notify[]' "$FILE")
            echo "Found channels: $CHANNELS"

            for CHANNEL in $CHANNELS; do
              echo "Sending notification to $CHANNEL"
              URL=$(eval "echo \$$CHANNEL")
              echo "Webhook URL: $URL"
              jinja-cli -u debug -d "$FILE" "$TEMPLATE_PATH" | curl -X POST -H "$HEADERS" --data @- "$URL"
            done
          done
